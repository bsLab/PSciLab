[{"Config":{"clearAuto":true,"group":"anonymous","mode":"javascript","file":"workbook.sparkline","thisthat":true,"turbo":true,"user":"titujozi","docUrl":"localhost:5558","projUrl":"192.168.0.45:5550","webclipTime":300,"webclipUrl":"localhost:9176","webxUrl":"localhost:9177","modules":[],"workdir":"/home/sbosse/proj/workbook","wex":{"http":"http://localhost:11111","ws":"ws://localhost:11112"}}},{"Notes":[]},{},{"options":{"eval":"_PxEnUf_ZnVuY3Rpb24gKHRleHQsZW52KSB7CiAgICAgICAgICAgICBqc1Njb3BlLnJ1bih0ZXh0LGVudikKICAgICAgICAgIH0=","mode":"javascript","label":"code1","heightC":100,"heightE":10,"collapsed":false},"code":"load('math.plugin')"},{"options":{"eval":"_PxEnUf_ZnVuY3Rpb24gKHRleHQsZW52KSB7CiAgICAgICAgICAgICBqc1Njb3BlLnJ1bih0ZXh0LGVudikKICAgICAgICAgIH0=","mode":"javascript","label":"Line Plot","heightC":100,"heightE":10,"collapsed":false,"overlay":false,"evalUser":"undefined"},"code":"var el=$('<span/>');\nprint(el)\nel.sparkline([1,2,3,2,6,2,8,-2].shuffle(),{\n  type:'line',\n  height:30,\n  width:'100px'\n})"},{"options":{"eval":"_PxEnUf_ZnVuY3Rpb24gKHRleHQsZW52KSB7CiAgICAgICAgICAgICBqc1Njb3BlLnJ1bih0ZXh0LGVudikKICAgICAgICAgIH0=","mode":"javascript","label":"Box Plot","heightC":100,"heightE":10,"collapsed":false,"overlay":false,"evalUser":"undefined"},"code":"var el=$('<span/>');\nprint(el)\nel.sparkline(Array.random(10,-5,5),{\n  type:'box',\n  height:30,\n  width:'100px'\n})"},{"options":{"eval":"_PxEnUf_ZnVuY3Rpb24gKHRleHQsZW52KSB7CiAgICAgICAgICAgICBqc1Njb3BlLnJ1bih0ZXh0LGVudikKICAgICAgICAgIH0=","mode":"javascript","label":"Bar Plot","heightC":100,"heightE":10,"collapsed":false,"overlay":false,"evalUser":"undefined"},"code":"var el=$('<span/>');\nel.appendTo($('<body>'))\nel.sparkline([1.3,2.2,3,2,6,2].shuffle(),{\n  type:'bar',\n  height:30,\n  barColor:'red',\n  barWidth:20\n})\nprint(el)"},{"options":{"eval":"_PxEnUf_ZnVuY3Rpb24gKHRleHQsZW52KSB7CiAgICAgICAgICAgICBqc1Njb3BlLnJ1bih0ZXh0LGVudikKICAgICAgICAgIH0=","mode":"javascript","label":"Tristate Plot","heightC":100,"heightE":10,"collapsed":false,"overlay":false,"evalUser":"undefined"},"code":"var el=$('<span/>');\nprint(el)\nel.sparkline([-1,0,-1,1,0,1].shuffle(),{\n  type:'tristate',\n  height:30,\n  barWidth:20,\n  // colorMap:[\"red\", \"green\", \"blue\"]\n})"},{"options":{"eval":"_PxEnUf_ZnVuY3Rpb24gKHRleHQsZW52KSB7CiAgICAgICAgICAgICBqc1Njb3BlLnJ1bih0ZXh0LGVudikKICAgICAgICAgIH0=","mode":"javascript","label":"Pie Plot","heightC":100,"heightE":10,"collapsed":false,"overlay":false,"evalUser":"undefined"},"code":"var el=$('<span/>');\nprint(el)\nel.sparkline([10,5,30].shuffle(),{\n  type:'pie',\n  height:50,\n  sliceColors:['red','yellow','black']\n})"},{"options":{"eval":"_PxEnUf_ZnVuY3Rpb24gKHRleHQsZW52KSB7CiAgICAgICAgICAgICBqc1Njb3BlLnJ1bih0ZXh0LGVudikKICAgICAgICAgIH0=","mode":"javascript","label":"Layer Table","heightC":100,"heightE":30,"collapsed":false,"overlay":false,"evalUser":"undefined"},"code":"function plot(layers,options) {\n  options=options||{}\n  options.width=options.width||300;\n  options.fontsize=options.fontsize||14;\n  var t = $('<table/>',{style:'width:'+options.width}),\n      tb = $('<tbody/>').appendTo(t);\n  t.appendTo($('<body>'))\n  function makeSparkline (td,type,values,options) {\n    switch (type) {\n      case 'bar':\n        td.sparkline(values,{\n          type:'bar',\n          height:options.height||30,\n          barColor:options.color||'red',\n          barWidth:options.width||20,\n          zeroAxis:true,\n          zeroColor:'black',\n          chartRangeMin: options.min,\n          chartRangeMax: options.max\n        })\n        break;\n    }  \n  }\n  function options() {\n    for(var i in arguments) \n      if (arguments[i]!=undefined) return arguments[i];\n  }\n  function updateStats(stats,vals) {\n    if (stats.min==undefined) {\n      stats.min=1E9;\n      stats.max=-1E9;\n      stats.sum=0;\n      stats.n=0;\n    }\n    if (Utils.isArray(vals)) for(var i in vals) updateStats(stats,vals[i]);\n    else {\n      stats.min=Math.min(stats.min,vals);\n      stats.max=Math.max(stats.max,vals);\n      stats.sum+=vals;\n      stats.n++;\n    }\n  }\n  for(var layerIndex in layers) {\n    var layer = layers[layerIndex];\n    var tr = $('<tr/>',{style:''}).appendTo(tb);\n    var tdLabel = $('<td/>',{style:'text-align:left;min-width:100px;font-size:'+options.fontsize}).html(layer.name).appendTo(tr);\n    var tdContent = $('<td/>',{style:'border:1px solid #CCC;text-align:center'}).appendTo(tr);\n    var tLayer=$('<table/>',{style:'width:200px'}).appendTo(tdContent),\n        tbLayer = $('<tbody/>').appendTo(tLayer);\n    var attributes = ['x','p','y'];\n    var colmax=1,r=5;\n    for (var a in attributes) {\n      var attr = attributes[a];\n      if (layer.nodes[Object.keys(layer.nodes)[0]][attr]==undefined) continue;\n      var trLayer = $('<tr/>',{style:''}).appendTo(tbLayer);\n      function vector(nodes,attr) {\n        var vals = []\n        $('<td/>',{style:'padding:5px; min-width:20px;text-align:left;font-size:'+options.fontsize}).html(attr).appendTo(trLayer);\n        var cols=0;\n        for (var i in nodes) {\n          var node = nodes[i];\n          if (node[attr]==undefined) continue;\n          cols++;\n          var vals = node[attr];\n          if (Utils.isArray(node[attr][0])) {\n            var tdNode = $('<td/>',{style:'padding: 2px;text-align:center;border-bottom:1px solid;'}).appendTo(trLayer);\n            var tPart = $('<table/>',{style:'width:100%'}).appendTo(tdNode),\n                tPartBody = $('<tbody/>').appendTo(tPart);\n            for (var row in node[attr]) {\n              var tPartRow = $('<tr/>',{style:''}).appendTo(tPartBody);\n              vals = node[attr][row];\n              var tdPart = $('<td/>',{style:'padding: 5px;text-align:center;'}).appendTo(tPartRow);\n              makeSparkline(tdPart,'bar',vals,{\n                min:options(layer['min'+attr.toUpperCase()],layer.min),\n                max:options(layer['max'+attr.toUpperCase()],layer.max),\n                color:options(layer['color'+attr.toUpperCase()],'green'),\n                height:options(layer['height'+attr.toUpperCase()],layer.height),\n                width:options(layer['width'+attr.toUpperCase()],layer.width,5)\n              })                \n            }\n          } else {\n            var tdNode = $('<td/>',{style:'padding: 2px;text-align:center;border-bottom:1px solid;'}).appendTo(trLayer);\n            makeSparkline(tdNode,'bar',vals,{\n              min:options(layer['min'+attr.toUpperCase()],layer.min),\n              max:options(layer['max'+attr.toUpperCase()],layer.max),\n              color:options(layer['color'+attr.toUpperCase()],'green'),\n              height:options(layer['height'+attr.toUpperCase()],layer.height),\n              width:options(layer['width'+attr.toUpperCase()],layer.width,5)\n            })\n          }\n        }\n        colmax=Math.max(cols,colmax)      \n      }\n      function line (nodes,attr) {\n        $('<td/>',{style:'padding:5px; min-width:20px;text-align:left;font-size:'+options.fontsize}).html(attr).appendTo(trLayer);\n        var vals = [], stats={}\n        for (var i in layer.nodes) {\n          var node = layer.nodes[i];\n          updateStats(stats,node[attr])\n          vals.push(node[attr]);\n        }\n        if (layer.stats) {\n          var tdStatOuter = $('<td/>',{style:'padding: 5px;'}).appendTo(trLayer);\n          var tStat  = $('<table/>',{style:'width:100%'}).appendTo(tdStatOuter),\n              tStatBody = $('<tbody/>').appendTo(tStat);\n             \n          for (var s in layer.stats) {\n            var stat = layer.stats[s],\n                trStat = $('<tr/>',{style:''}).appendTo(tStatBody),\n                tdStat = $('<td/>',{style:'padding:5px; min-width:20px;text-align:left;font-size:'+options.fontsize}).appendTo(trStat);\n            var v = 0;\n            if (stat=='min') v=stats.min;\n            if (stat=='max') v=stats.max;\n            tdStat.html(stat+'='+v);\n          }\n        }\n        var tdLayer = $('<td/>',{style:'padding: 10px;text-align:center;'}).appendTo(trLayer);\n        if (colmax>1) tdLayer.attr('colspan',colmax);\n        makeSparkline(tdLayer,'bar',vals,{\n          min:options(layer['min'+attr.toUpperCase()],layer.min),\n          max:options(layer['max'+attr.toUpperCase()],layer.max),\n          color:options(layer['color'+attr.toUpperCase()],'red'),\n          height:options(layer['height'+attr.toUpperCase()],layer.height),\n          width:options(layer['width'+attr.toUpperCase()],layer.width,20)\n        })      \n      }\n      switch (attr) {\n        case 'x':\n        case 'dx':\n        case 'p':\n        case 'dp':\n          vector(layer.nodes,attr);\n          break;\n        case 'y':\n          line(layer.nodes,attr);\n          break;\n      }\n    }\n  }\n  return t;\n}\n\nprint(plot([\n{type:'bar',name:'input',min:0,max:1,nodes:{\n  n1:{y:0.5},\n  n2:{y:1.0},\n  n3:{y:0.0},\n  n4:{y:0.2}}},\n{type:'bar',name:'hidden1',min:0,max:1,nodes:{\n  n1:{y:0.5},\n  n2:{y:1.0},\n  n3:{y:0.0},\n  n4:{y:0.2},\n  n5:{y:0.0},\n  n6:{y:0.2}}},\n{type:'bar',name:'hidden2',minX:0,maxX:1,minP:-10,maxP:10,minY:0,maxY:1,widthY:50,nodes:{\n  n5:{x:[[0.5,1.0,0.0],[0.2,0.0,0.2]],p:[[10.0,-1,2],[3,1,2]],y:0.5},\n  n6:{x:[[0.3,1.0,0.2],[0.3,0.2,0.5]],p:[[10.0,-10,2],[3,1,2]],y:1.0}}},\n{type:'bar',name:'output',min:0,max:1,stats:['min','max'],nodes:{\n  n5:{x:[0.5,1.0,0.0,0.2,0.0,0.2],p:[10.0,-10,2,3,1,2],y:0.5},\n  n6:{x:[0.5,1.0,0.0,0.2,0.0,0.2],p:[10.0,-1,2,3,1,2],y:1.0}}}\n],{width:400}))"}]